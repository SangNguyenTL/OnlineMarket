package onlinemarket.model;
// default package
// Generated Jan 2, 2018 4:57:38 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import onlinemarket.model.other.AdvancedValidation;
import onlinemarket.validation.EventValidate;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.validator.constraints.Range;
import org.springframework.format.annotation.DateTimeFormat;

/**
 * Event generated by hbm2java
 */
@Entity
@Table(name = "tb_event", schema = "dbo", catalog = "SmartMarket")
@EventValidate(groups =  AdvancedValidation.class)
public class Event implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private User publisher;
	private String name;
	private String content;
	private Integer status;
	private Byte percentValue;
	private Long value;
	private String code;
	private Date createDate;
	private Date updateDate;
	private Date dateFrom;
	private Date dateTo;
	private Long maxPrice;
	private Long minPrice;
	private Integer count;
	private boolean show = true;
	private String featureImage;
	private Set<Product> products = new HashSet<>(0);

	public Event() {
	}

	public void updateEvent(Event event){
		publisher = event.publisher;
		name = event.name;
		code = event.code;
		featureImage = event.featureImage;
		content = event.content;
		status = event.status;
		percentValue = event.percentValue;
		value = event.value;
		updateDate = new Date();
		count = event.getCount();
		dateFrom = event.dateFrom;
		dateTo = event.dateTo;
		maxPrice = event.maxPrice;
		minPrice = event.minPrice;
		products = event.products;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "_id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "publisher_id", nullable = false)
	public User getPublisher() {
		return publisher;
	}

	public void setPublisher(User publisher) {
		this.publisher = publisher;
	}

	@Column(name = "name", nullable = false)
	@Size(min = 6, max = 255)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "show")
	public boolean isShow() {
		return show;
	}

	public void setShow(boolean show) {
		this.show = show;
	}

	@Column(name = "content")
	@Size(max = 1000000)
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Column(name = "status", nullable = false )
	@Range(min = 0, max = 1)
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Column(name = "count")
	@Range(max = 1000000)
	public Integer getCount() {
		return count;
	}

	public void setCount(Integer count) {
		this.count = count;
	}

	@Column(name = "percent_value")
	@Range(min = 0, max = 100)
	public Byte getPercentValue() {
		return this.percentValue;
	}

	public void setPercentValue(Byte percentValue) {
		this.percentValue = percentValue;
	}

	@Column(name = "value", precision = 13)
	@Range(max = 1000000000)
	public Long getValue() {
		return this.value;
	}

	public void setValue(Long value) {
		this.value = value;
	}

	@Column(name = "code", length = 32)
	@Size(max = 32)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", nullable = false, length = 23)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 23)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_from", nullable = false, length = 23)
	@DateTimeFormat(pattern = "dd-MM-yyyy")
	public Date getDateFrom() {
		return this.dateFrom;
	}

	public void setDateFrom(Date dateFrom) {
		this.dateFrom = dateFrom;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@DateTimeFormat(pattern = "dd-MM-yyyy")
	@Column(name = "date_to", nullable = false, length = 23)
	public Date getDateTo() {
		return this.dateTo;
	}

	public void setDateTo(Date dateTo) {
		this.dateTo = dateTo;
	}

	@Column(name = "max_price", nullable = false, precision = 13)
	@Range(max = 1000000000)
    @NotNull
	public Long getMaxPrice() {
		return this.maxPrice;
	}

	public void setMaxPrice(Long maxPrice) {
		this.maxPrice = maxPrice;
	}

	@Column(name = "min_price", nullable = false, precision = 13)
	@Range(max = 1000000000)
    @NotNull
	public Long getMinPrice() {
		return this.minPrice;
	}

	public void setMinPrice(Long minPrice) {
		this.minPrice = minPrice;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "tb_event_product", schema = "dbo", catalog = "SmartMarket", joinColumns = {
			@JoinColumn(name = "event_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "product_id", nullable = false, updatable = false) })
	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set<Product> products) {
		this.products = products;
	}

	@Column(name = "feature_image", length = 2088)
	@Size(max = 2088)
	public String getFeatureImage() {
		return this.featureImage;
	}

	public void setFeatureImage(String featureImage) {
		this.featureImage = featureImage;
}

}
