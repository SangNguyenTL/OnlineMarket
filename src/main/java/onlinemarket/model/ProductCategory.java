package onlinemarket.model;
// default package
// Generated Jan 2, 2018 4:57:38 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

import static javax.persistence.GenerationType.IDENTITY;

import javax.validation.constraints.Size;

import com.fasterxml.jackson.annotation.JsonIgnore;
import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;
import org.hibernate.validator.constraints.NotEmpty;

import onlinemarket.model.other.AdvancedValidation;
import onlinemarket.validation.UniqueProductCategorySlug;
import org.springframework.format.annotation.DateTimeFormat;

/**
 * ProductCategory generated by hbm2java
 */
@Entity
@Table(name = "tb_product_category", schema = "dbo", catalog = "SmartMarket")
@UniqueProductCategorySlug(groups = AdvancedValidation.CheckSlug.class)
public class ProductCategory implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private String name;
	private String slug;
	private String beforeSlug;
	private String description;
	private Date createDate = new Date();
	private Date updateDate;
	private Set<AttributeGroup> attributeGroups = new HashSet<>(0);
	private Set<Product> products = new HashSet<>(0);

	public ProductCategory() {
	}

	public ProductCategory(String name, String slug, Date updateDate) {
		this.name = name;
		this.slug = slug;
		this.updateDate = updateDate;
	}

	public ProductCategory(Integer id) {
	}


	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "_id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", nullable = false)
	@NotEmpty
	@Size(min = 3, max = 64)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "slug", nullable = false)
	@NotEmpty
	@Size(min = 3, max = 64)
	public String getSlug() {
		return this.slug;
	}

	public void setSlug(String slug) {
		this.slug = slug;
	}

	@Transient
	public String getBeforeSlug() {
		return beforeSlug;
	}

	public void setBeforeSlug(String beforeSlug) {
		this.beforeSlug = beforeSlug;
	}

	@Column(name = "description")
	@Size(min = 50, max = 1000)
	@JsonIgnore
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@DateTimeFormat(pattern = "yyyy-MM-dd hh:mm:ss")
	@Column(name = "create_date", length = 23)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@DateTimeFormat(pattern = "yyyy-MM-dd hh:mm:ss")
	@Column(name = "update_date", nullable = false, length = 23)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "productCategory")
	@OrderBy("priority")
	@JsonIgnore
	public Set<AttributeGroup> getAttributeGroups() {
		return this.attributeGroups;
	}

	public void setAttributeGroups(Set<AttributeGroup> attributeGroups) {
		this.attributeGroups = attributeGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "productCategory")
	@LazyCollection(LazyCollectionOption.EXTRA)
	@JsonIgnore
	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set<Product> products) {
		this.products = products;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((slug == null) ? 0 : slug.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ProductCategory other = (ProductCategory) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (slug == null) {
			if (other.slug != null)
				return false;
		} else if (!slug.equals(other.slug))
			return false;
		return true;
	}

	
}
