package OnlineMarket.model;
// default package

// Generated Jan 2, 2018 4:57:38 PM by Hibernate Tools 4.3.5.Final


import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.validation.constraints.Size;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.validator.constraints.NotEmpty;
import org.hibernate.validator.constraints.Range;

/**
 * AttributeGroup generated by hbm2java
 */
@Entity
@Table(name = "tb_attribute_group", schema = "dbo", catalog = "SmartMarket")
public class AttributeGroup implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private Integer id;
	private ProductCategory productCategory;
	private String name;
	private String description;
	private Integer priority;
	private List<Attribute> attributes;

	public AttributeGroup() {
	}

	public AttributeGroup(ProductCategory productCategory, String name) {

		this.productCategory = productCategory;
		this.name = name;

	}


	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "_id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "product_category_id", nullable = false)
	public ProductCategory getProductCategory() {
		return this.productCategory;
	}

	public void setProductCategory(ProductCategory productCategory) {
		this.productCategory = productCategory;
	}

	@Column(name = "name", nullable = false)
	@NotEmpty
	@Size(max = 128)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description")
	@Size(min = 6, max = 500)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "attributeGroup")
	@Fetch(FetchMode.SELECT)
	@OrderBy("priority")
	public List<Attribute> getAttributes() {
		return this.attributes;
	}

	public void setAttributes(List<Attribute> attributes) {
		this.attributes = attributes;
	}

	@Range(min = 0, max = 1000)
	public Integer getPriority() {
		return priority;
	}

	public void setPriority(Integer priority) {
		this.priority = priority;
	}

}
