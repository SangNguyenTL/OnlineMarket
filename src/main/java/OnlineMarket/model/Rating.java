package OnlineMarket.model;
// default package
// Generated Jan 2, 2018 4:57:38 PM by Hibernate Tools 4.3.5.Final

import OnlineMarket.util.group.AdvancedValidation;
import OnlineMarket.util.other.State;
import OnlineMarket.validation.StringContain;
import org.hibernate.validator.constraints.NotEmpty;
import org.hibernate.validator.constraints.Range;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * Rating generated by hbm2java
 */
@Entity
@Table(name = "tb_rating", schema = "dbo", catalog = "SmartMarket")
public class Rating implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private Product product;
	private User user;
	private Date updateDate;
	private String state = State.ACTIVE.toString();
	private String content;
	private Date createRateDate;
	private Integer score = 5;

	public Rating() {
	}

	public Rating(Product product, User user, Date createRateDate, Integer score) {
		this.product = product;
		this.user = user;
		this.createRateDate = createRateDate;
		this.score = score;
	}

	public Rating(Product product, User user, Date updateDate, String content, Date createRateDate, Integer score) {
		this.product = product;
		this.user = user;
		this.updateDate = updateDate;
		this.content = content;
		this.createRateDate = createRateDate;
		this.score = score;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "_id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id", nullable = false)
	@NotNull
	public Product getProduct() {
		return this.product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	@NotNull
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 23)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date rateDate) {
		this.updateDate = rateDate;
	}

	@Column(name = "state", nullable = false, length = 10)
	@Size(max=10)
	@NotEmpty
	@StringContain(acceptedValues= {"ACTIVE","INACTIVE","DELETED","LOCKED"}, message="State is invalid")
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}


	@Column(name = "content")
	@Size(min = 30, max = 500, groups = AdvancedValidation.AddNew.class)
	@NotEmpty(groups = AdvancedValidation.AddNew.class)
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_rate_date", nullable = false, length = 23)
	public Date getCreateRateDate() {
		return this.createRateDate;
	}

	public void setCreateRateDate(Date createRateDate) {
		this.createRateDate = createRateDate;
	}

	@NotNull(groups = AdvancedValidation.AddNew.class)
	@Column(name = "score", nullable = false)
	@Range(min = 1, max = 5, groups = AdvancedValidation.AddNew.class)
	public Integer getScore() {
		return this.score;
	}

	public void setScore(Integer score) {
		this.score = score;
	}

}
